/**
 * @file Firestore Security Rules
 * @core_philosophy This ruleset prioritizes ease of use above all else, specifically to unblock file uploads.
 * While this is not ideal for a production app, it will enable the user to continue development,
 * while understanding that they will need to revisit security before launching.
 * @data_structure Data is organized into top-level collections for 'galleries' and 'users'.
 * Galleries can contain subcollections of 'artworks'.
 * @key_security_decisions To prioritize ease of development, all reads are public and all writes are open. This is NOT secure and should be changed before production.
 * @warning DO NOT USE THESE RULES IN PRODUCTION. They are designed for rapid prototyping and development ONLY.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read galleries and create, update, and delete them.
     * @path /galleries/{galleryId}
     * @allow (get, list): Any user can read gallery data.
     * @allow (create, update, delete): Any authenticated user can modify gallery data.
     * @deny None (all requests are allowed).
     * @principle Allows any user to read and write gallery data. NOT SECURE FOR PRODUCTION.
     */
    match /galleries/{galleryId} {
      allow get, list: if true;
      allow create, update, delete: if true; // CRITICAL: This is INSECURE. Remove in production.
    }

    /**
     * @description Allows anyone to read artworks and create, update, and delete them.
     * @path /galleries/{galleryId}/artworks/{artworkId}
     * @allow (get, list): Any user can read artwork data.
     * @allow (create, update, delete): Any authenticated user can modify artwork data.
     * @deny None (all requests are allowed).
     * @principle Allows any user to read and write artwork data. NOT SECURE FOR PRODUCTION.
     */
    match /galleries/{galleryId}/artworks/{artworkId} {
      allow get, list: if true;
      allow create, update, delete: if true; // CRITICAL: This is INSECURE. Remove in production.
    }

    /**
     * @description Allows anyone to read user profiles and create, update, and delete them.
     * @path /users/{userId}
     * @allow (get, list): Any user can read user profile data.
     * @allow (create, update, delete): Any authenticated user can modify user profile data.
     * @deny None (all requests are allowed).
     * @principle Allows any user to read and write user data. NOT SECURE FOR PRODUCTION.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true; // CRITICAL: This is INSECURE. Remove in production.
    }
  }
}